# Use a fee that is proportional to the channel's local balance with
# the ppm range surrounding the weighted average of the peer node's
# inbound ppm rate.
#
# Example:
#    - Let's suppose you have a channel with Peer XYZ.
#    - Peer XYZ has 4 channels.
#    - Those 4 channels are 1M, 2M, 3M, and 4M sats capacity.
#    - The inbound fee rates for those channels are 100 ppm, 200 ppm,
#      300 ppm, and 400 ppm.
#    - The weighted average is the sum of fees multiplied by the
#      channel's capacity. In this case, 300 ppm. Note, it's higher
#      than the plain average, because more capacity is at the 400 ppm
#      rate compared to the lower ppm rate.
#
# The `min_fee_ppm` and `max_fee_ppm` are absolute, and will override
# whatever calculations are made.
#
# The `fee_avg_calc_cutoff_ppm` is a cutoff maximum value when
# considering the peer's inbound channel ppm. We can exclude these
# extreme values from the calculation to get a more reasonable avg.
#
# The `avg_fee_ppm_multiplier` shifts the calculated peer's avg to
# higher or lower. This is useful if you think the avg is too low
# or too high.
#
# The `upper_fee_ppm_multiplier` determines how aggresively you want
# your ppm to rise as the local channel balance falls. A multiplier
# of 2 sets the upper ppm fee to be double as balance approaches 0.

[proportional_peer_inbound]
strategy = proportional_peer_inbound
node.min_shared_channels_active = 1
base_fee_msat = 0
min_fee_ppm_delta = 50
max_htlc_proportional_slices = 6

min_fee_ppm = 1
max_fee_ppm = 99_999
fee_avg_calc_cutoff_ppm = 5_000
avg_fee_ppm_multiplier = 1.0
upper_fee_ppm_multiplier = 2.0

time_lock_delta = 18