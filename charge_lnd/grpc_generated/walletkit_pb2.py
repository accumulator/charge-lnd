# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: walletkit.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from . import lightning_pb2 as lightning__pb2
from . import signer_pb2 as signer__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0fwalletkit.proto\x12\twalletrpc\x1a\x0flightning.proto\x1a\x0csigner.proto\"e\n\x12ListUnspentRequest\x12\x11\n\tmin_confs\x18\x01 \x01(\x05\x12\x11\n\tmax_confs\x18\x02 \x01(\x05\x12\x0f\n\x07\x61\x63\x63ount\x18\x03 \x01(\t\x12\x18\n\x10unconfirmed_only\x18\x04 \x01(\x08\"1\n\x13ListUnspentResponse\x12\x1a\n\x05utxos\x18\x01 \x03(\x0b\x32\x0b.lnrpc.Utxo\"_\n\x12LeaseOutputRequest\x12\n\n\x02id\x18\x01 \x01(\x0c\x12!\n\x08outpoint\x18\x02 \x01(\x0b\x32\x0f.lnrpc.OutPoint\x12\x1a\n\x12\x65xpiration_seconds\x18\x03 \x01(\x04\")\n\x13LeaseOutputResponse\x12\x12\n\nexpiration\x18\x01 \x01(\x04\"E\n\x14ReleaseOutputRequest\x12\n\n\x02id\x18\x01 \x01(\x0c\x12!\n\x08outpoint\x18\x02 \x01(\x0b\x32\x0f.lnrpc.OutPoint\"\x17\n\x15ReleaseOutputResponse\"6\n\x06KeyReq\x12\x18\n\x10key_finger_print\x18\x01 \x01(\x05\x12\x12\n\nkey_family\x18\x02 \x01(\x05\"T\n\x0b\x41\x64\x64rRequest\x12\x0f\n\x07\x61\x63\x63ount\x18\x01 \x01(\t\x12$\n\x04type\x18\x02 \x01(\x0e\x32\x16.walletrpc.AddressType\x12\x0e\n\x06\x63hange\x18\x03 \x01(\x08\"\x1c\n\x0c\x41\x64\x64rResponse\x12\x0c\n\x04\x61\x64\x64r\x18\x01 \x01(\t\"\xe7\x01\n\x07\x41\x63\x63ount\x12\x0c\n\x04name\x18\x01 \x01(\t\x12,\n\x0c\x61\x64\x64ress_type\x18\x02 \x01(\x0e\x32\x16.walletrpc.AddressType\x12\x1b\n\x13\x65xtended_public_key\x18\x03 \x01(\t\x12\x1e\n\x16master_key_fingerprint\x18\x04 \x01(\x0c\x12\x17\n\x0f\x64\x65rivation_path\x18\x05 \x01(\t\x12\x1a\n\x12\x65xternal_key_count\x18\x06 \x01(\r\x12\x1a\n\x12internal_key_count\x18\x07 \x01(\r\x12\x12\n\nwatch_only\x18\x08 \x01(\x08\"u\n\x0f\x41\x64\x64ressProperty\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\t\x12\x13\n\x0bis_internal\x18\x02 \x01(\x08\x12\x0f\n\x07\x62\x61lance\x18\x03 \x01(\x03\x12\x17\n\x0f\x64\x65rivation_path\x18\x04 \x01(\t\x12\x12\n\npublic_key\x18\x05 \x01(\x0c\"\x9a\x01\n\x14\x41\x63\x63ountWithAddresses\x12\x0c\n\x04name\x18\x01 \x01(\t\x12,\n\x0c\x61\x64\x64ress_type\x18\x02 \x01(\x0e\x32\x16.walletrpc.AddressType\x12\x17\n\x0f\x64\x65rivation_path\x18\x03 \x01(\t\x12-\n\taddresses\x18\x04 \x03(\x0b\x32\x1a.walletrpc.AddressProperty\"Q\n\x13ListAccountsRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\x12,\n\x0c\x61\x64\x64ress_type\x18\x02 \x01(\x0e\x32\x16.walletrpc.AddressType\"<\n\x14ListAccountsResponse\x12$\n\x08\x61\x63\x63ounts\x18\x01 \x03(\x0b\x32\x12.walletrpc.Account\"<\n\x16RequiredReserveRequest\x12\"\n\x1a\x61\x64\x64itional_public_channels\x18\x01 \x01(\r\"3\n\x17RequiredReserveResponse\x12\x18\n\x10required_reserve\x18\x01 \x01(\x03\"J\n\x14ListAddressesRequest\x12\x14\n\x0c\x61\x63\x63ount_name\x18\x01 \x01(\t\x12\x1c\n\x14show_custom_accounts\x18\x02 \x01(\x08\"X\n\x15ListAddressesResponse\x12?\n\x16\x61\x63\x63ount_with_addresses\x18\x01 \x03(\x0b\x32\x1f.walletrpc.AccountWithAddresses\"%\n\x15GetTransactionRequest\x12\x0c\n\x04txid\x18\x01 \x01(\t\"7\n\x1aSignMessageWithAddrRequest\x12\x0b\n\x03msg\x18\x01 \x01(\x0c\x12\x0c\n\x04\x61\x64\x64r\x18\x02 \x01(\t\"0\n\x1bSignMessageWithAddrResponse\x12\x11\n\tsignature\x18\x01 \x01(\t\"L\n\x1cVerifyMessageWithAddrRequest\x12\x0b\n\x03msg\x18\x01 \x01(\x0c\x12\x11\n\tsignature\x18\x02 \x01(\t\x12\x0c\n\x04\x61\x64\x64r\x18\x03 \x01(\t\">\n\x1dVerifyMessageWithAddrResponse\x12\r\n\x05valid\x18\x01 \x01(\x08\x12\x0e\n\x06pubkey\x18\x02 \x01(\x0c\"\xa0\x01\n\x14ImportAccountRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x1b\n\x13\x65xtended_public_key\x18\x02 \x01(\t\x12\x1e\n\x16master_key_fingerprint\x18\x03 \x01(\x0c\x12,\n\x0c\x61\x64\x64ress_type\x18\x04 \x01(\x0e\x32\x16.walletrpc.AddressType\x12\x0f\n\x07\x64ry_run\x18\x05 \x01(\x08\"|\n\x15ImportAccountResponse\x12#\n\x07\x61\x63\x63ount\x18\x01 \x01(\x0b\x32\x12.walletrpc.Account\x12\x1e\n\x16\x64ry_run_external_addrs\x18\x02 \x03(\t\x12\x1e\n\x16\x64ry_run_internal_addrs\x18\x03 \x03(\t\"Z\n\x16ImportPublicKeyRequest\x12\x12\n\npublic_key\x18\x01 \x01(\x0c\x12,\n\x0c\x61\x64\x64ress_type\x18\x02 \x01(\x0e\x32\x16.walletrpc.AddressType\"\x19\n\x17ImportPublicKeyResponse\"\xe2\x01\n\x16ImportTapscriptRequest\x12\x1b\n\x13internal_public_key\x18\x01 \x01(\x0c\x12\x31\n\tfull_tree\x18\x02 \x01(\x0b\x32\x1c.walletrpc.TapscriptFullTreeH\x00\x12;\n\x0epartial_reveal\x18\x03 \x01(\x0b\x32!.walletrpc.TapscriptPartialRevealH\x00\x12\x18\n\x0eroot_hash_only\x18\x04 \x01(\x0cH\x00\x12\x17\n\rfull_key_only\x18\x05 \x01(\x08H\x00\x42\x08\n\x06script\";\n\x11TapscriptFullTree\x12&\n\nall_leaves\x18\x01 \x03(\x0b\x32\x12.walletrpc.TapLeaf\"/\n\x07TapLeaf\x12\x14\n\x0cleaf_version\x18\x01 \x01(\r\x12\x0e\n\x06script\x18\x02 \x01(\x0c\"a\n\x16TapscriptPartialReveal\x12)\n\rrevealed_leaf\x18\x01 \x01(\x0b\x32\x12.walletrpc.TapLeaf\x12\x1c\n\x14\x66ull_inclusion_proof\x18\x02 \x01(\x0c\"/\n\x17ImportTapscriptResponse\x12\x14\n\x0cp2tr_address\x18\x01 \x01(\t\",\n\x0bTransaction\x12\x0e\n\x06tx_hex\x18\x01 \x01(\x0c\x12\r\n\x05label\x18\x02 \x01(\t\"(\n\x0fPublishResponse\x12\x15\n\rpublish_error\x18\x01 \x01(\t\"+\n\x19RemoveTransactionResponse\x12\x0e\n\x06status\x18\x01 \x01(\t\"\xc5\x01\n\x12SendOutputsRequest\x12\x12\n\nsat_per_kw\x18\x01 \x01(\x03\x12\x1f\n\x07outputs\x18\x02 \x03(\x0b\x32\x0e.signrpc.TxOut\x12\r\n\x05label\x18\x03 \x01(\t\x12\x11\n\tmin_confs\x18\x04 \x01(\x05\x12\x19\n\x11spend_unconfirmed\x18\x05 \x01(\x08\x12=\n\x17\x63oin_selection_strategy\x18\x06 \x01(\x0e\x32\x1c.lnrpc.CoinSelectionStrategy\"%\n\x13SendOutputsResponse\x12\x0e\n\x06raw_tx\x18\x01 \x01(\x0c\")\n\x12\x45stimateFeeRequest\x12\x13\n\x0b\x63onf_target\x18\x01 \x01(\x05\")\n\x13\x45stimateFeeResponse\x12\x12\n\nsat_per_kw\x18\x01 \x01(\x03\"\x9a\x03\n\x0cPendingSweep\x12!\n\x08outpoint\x18\x01 \x01(\x0b\x32\x0f.lnrpc.OutPoint\x12,\n\x0cwitness_type\x18\x02 \x01(\x0e\x32\x16.walletrpc.WitnessType\x12\x12\n\namount_sat\x18\x03 \x01(\r\x12\x18\n\x0csat_per_byte\x18\x04 \x01(\rB\x02\x18\x01\x12\x1a\n\x12\x62roadcast_attempts\x18\x05 \x01(\r\x12!\n\x15next_broadcast_height\x18\x06 \x01(\rB\x02\x18\x01\x12\x11\n\x05\x66orce\x18\x07 \x01(\x08\x42\x02\x18\x01\x12!\n\x15requested_conf_target\x18\x08 \x01(\rB\x02\x18\x01\x12\"\n\x16requested_sat_per_byte\x18\t \x01(\rB\x02\x18\x01\x12\x15\n\rsat_per_vbyte\x18\n \x01(\x04\x12\x1f\n\x17requested_sat_per_vbyte\x18\x0b \x01(\x04\x12\x11\n\timmediate\x18\x0c \x01(\x08\x12\x0e\n\x06\x62udget\x18\r \x01(\x04\x12\x17\n\x0f\x64\x65\x61\x64line_height\x18\x0e \x01(\r\"\x16\n\x14PendingSweepsRequest\"H\n\x15PendingSweepsResponse\x12/\n\x0epending_sweeps\x18\x01 \x03(\x0b\x32\x17.walletrpc.PendingSweep\"\xaf\x01\n\x0e\x42umpFeeRequest\x12!\n\x08outpoint\x18\x01 \x01(\x0b\x32\x0f.lnrpc.OutPoint\x12\x13\n\x0btarget_conf\x18\x02 \x01(\r\x12\x18\n\x0csat_per_byte\x18\x03 \x01(\rB\x02\x18\x01\x12\x11\n\x05\x66orce\x18\x04 \x01(\x08\x42\x02\x18\x01\x12\x15\n\rsat_per_vbyte\x18\x05 \x01(\x04\x12\x11\n\timmediate\x18\x06 \x01(\x08\x12\x0e\n\x06\x62udget\x18\x07 \x01(\x04\"!\n\x0f\x42umpFeeResponse\x12\x0e\n\x06status\x18\x01 \x01(\t\":\n\x11ListSweepsRequest\x12\x0f\n\x07verbose\x18\x01 \x01(\x08\x12\x14\n\x0cstart_height\x18\x02 \x01(\x05\"\xcc\x01\n\x12ListSweepsResponse\x12\x38\n\x13transaction_details\x18\x01 \x01(\x0b\x32\x19.lnrpc.TransactionDetailsH\x00\x12G\n\x0ftransaction_ids\x18\x02 \x01(\x0b\x32,.walletrpc.ListSweepsResponse.TransactionIDsH\x00\x1a)\n\x0eTransactionIDs\x12\x17\n\x0ftransaction_ids\x18\x01 \x03(\tB\x08\n\x06sweeps\"I\n\x17LabelTransactionRequest\x12\x0c\n\x04txid\x18\x01 \x01(\x0c\x12\r\n\x05label\x18\x02 \x01(\t\x12\x11\n\toverwrite\x18\x03 \x01(\x08\"\x1a\n\x18LabelTransactionResponse\"\xee\x02\n\x0f\x46undPsbtRequest\x12\x0e\n\x04psbt\x18\x01 \x01(\x0cH\x00\x12$\n\x03raw\x18\x02 \x01(\x0b\x32\x15.walletrpc.TxTemplateH\x00\x12\x30\n\x0b\x63oin_select\x18\t \x01(\x0b\x32\x19.walletrpc.PsbtCoinSelectH\x00\x12\x15\n\x0btarget_conf\x18\x03 \x01(\rH\x01\x12\x17\n\rsat_per_vbyte\x18\x04 \x01(\x04H\x01\x12\x0f\n\x07\x61\x63\x63ount\x18\x05 \x01(\t\x12\x11\n\tmin_confs\x18\x06 \x01(\x05\x12\x19\n\x11spend_unconfirmed\x18\x07 \x01(\x08\x12\x31\n\x0b\x63hange_type\x18\x08 \x01(\x0e\x32\x1c.walletrpc.ChangeAddressType\x12=\n\x17\x63oin_selection_strategy\x18\n \x01(\x0e\x32\x1c.lnrpc.CoinSelectionStrategyB\n\n\x08templateB\x06\n\x04\x66\x65\x65s\"p\n\x10\x46undPsbtResponse\x12\x13\n\x0b\x66unded_psbt\x18\x01 \x01(\x0c\x12\x1b\n\x13\x63hange_output_index\x18\x02 \x01(\x05\x12*\n\x0clocked_utxos\x18\x03 \x03(\x0b\x32\x14.walletrpc.UtxoLease\"\x92\x01\n\nTxTemplate\x12\x1f\n\x06inputs\x18\x01 \x03(\x0b\x32\x0f.lnrpc.OutPoint\x12\x33\n\x07outputs\x18\x02 \x03(\x0b\x32\".walletrpc.TxTemplate.OutputsEntry\x1a.\n\x0cOutputsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x04:\x02\x38\x01\"_\n\x0ePsbtCoinSelect\x12\x0c\n\x04psbt\x18\x01 \x01(\x0c\x12\x1f\n\x15\x65xisting_output_index\x18\x02 \x01(\x05H\x00\x12\r\n\x03\x61\x64\x64\x18\x03 \x01(\x08H\x00\x42\x0f\n\rchange_output\"p\n\tUtxoLease\x12\n\n\x02id\x18\x01 \x01(\x0c\x12!\n\x08outpoint\x18\x02 \x01(\x0b\x32\x0f.lnrpc.OutPoint\x12\x12\n\nexpiration\x18\x03 \x01(\x04\x12\x11\n\tpk_script\x18\x04 \x01(\x0c\x12\r\n\x05value\x18\x05 \x01(\x04\"&\n\x0fSignPsbtRequest\x12\x13\n\x0b\x66unded_psbt\x18\x01 \x01(\x0c\">\n\x10SignPsbtResponse\x12\x13\n\x0bsigned_psbt\x18\x01 \x01(\x0c\x12\x15\n\rsigned_inputs\x18\x02 \x03(\r\";\n\x13\x46inalizePsbtRequest\x12\x13\n\x0b\x66unded_psbt\x18\x01 \x01(\x0c\x12\x0f\n\x07\x61\x63\x63ount\x18\x05 \x01(\t\"A\n\x14\x46inalizePsbtResponse\x12\x13\n\x0bsigned_psbt\x18\x01 \x01(\x0c\x12\x14\n\x0craw_final_tx\x18\x02 \x01(\x0c\"\x13\n\x11ListLeasesRequest\"@\n\x12ListLeasesResponse\x12*\n\x0clocked_utxos\x18\x01 \x03(\x0b\x32\x14.walletrpc.UtxoLease*\x8e\x01\n\x0b\x41\x64\x64ressType\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x17\n\x13WITNESS_PUBKEY_HASH\x10\x01\x12\x1e\n\x1aNESTED_WITNESS_PUBKEY_HASH\x10\x02\x12%\n!HYBRID_NESTED_WITNESS_PUBKEY_HASH\x10\x03\x12\x12\n\x0eTAPROOT_PUBKEY\x10\x04*\xfb\t\n\x0bWitnessType\x12\x13\n\x0fUNKNOWN_WITNESS\x10\x00\x12\x18\n\x14\x43OMMITMENT_TIME_LOCK\x10\x01\x12\x17\n\x13\x43OMMITMENT_NO_DELAY\x10\x02\x12\x15\n\x11\x43OMMITMENT_REVOKE\x10\x03\x12\x17\n\x13HTLC_OFFERED_REVOKE\x10\x04\x12\x18\n\x14HTLC_ACCEPTED_REVOKE\x10\x05\x12%\n!HTLC_OFFERED_TIMEOUT_SECOND_LEVEL\x10\x06\x12&\n\"HTLC_ACCEPTED_SUCCESS_SECOND_LEVEL\x10\x07\x12\x1f\n\x1bHTLC_OFFERED_REMOTE_TIMEOUT\x10\x08\x12 \n\x1cHTLC_ACCEPTED_REMOTE_SUCCESS\x10\t\x12\x1c\n\x18HTLC_SECOND_LEVEL_REVOKE\x10\n\x12\x14\n\x10WITNESS_KEY_HASH\x10\x0b\x12\x1b\n\x17NESTED_WITNESS_KEY_HASH\x10\x0c\x12\x15\n\x11\x43OMMITMENT_ANCHOR\x10\r\x12!\n\x1d\x43OMMITMENT_NO_DELAY_TWEAKLESS\x10\x0e\x12\"\n\x1e\x43OMMITMENT_TO_REMOTE_CONFIRMED\x10\x0f\x12\x35\n1HTLC_OFFERED_TIMEOUT_SECOND_LEVEL_INPUT_CONFIRMED\x10\x10\x12\x36\n2HTLC_ACCEPTED_SUCCESS_SECOND_LEVEL_INPUT_CONFIRMED\x10\x11\x12\x1e\n\x1aLEASE_COMMITMENT_TIME_LOCK\x10\x12\x12(\n$LEASE_COMMITMENT_TO_REMOTE_CONFIRMED\x10\x13\x12+\n\'LEASE_HTLC_OFFERED_TIMEOUT_SECOND_LEVEL\x10\x14\x12,\n(LEASE_HTLC_ACCEPTED_SUCCESS_SECOND_LEVEL\x10\x15\x12\x19\n\x15TAPROOT_PUB_KEY_SPEND\x10\x16\x12\x1e\n\x1aTAPROOT_LOCAL_COMMIT_SPEND\x10\x17\x12\x1f\n\x1bTAPROOT_REMOTE_COMMIT_SPEND\x10\x18\x12\x1e\n\x1aTAPROOT_ANCHOR_SWEEP_SPEND\x10\x19\x12-\n)TAPROOT_HTLC_OFFERED_TIMEOUT_SECOND_LEVEL\x10\x1a\x12.\n*TAPROOT_HTLC_ACCEPTED_SUCCESS_SECOND_LEVEL\x10\x1b\x12$\n TAPROOT_HTLC_SECOND_LEVEL_REVOKE\x10\x1c\x12 \n\x1cTAPROOT_HTLC_ACCEPTED_REVOKE\x10\x1d\x12\x1f\n\x1bTAPROOT_HTLC_OFFERED_REVOKE\x10\x1e\x12\'\n#TAPROOT_HTLC_OFFERED_REMOTE_TIMEOUT\x10\x1f\x12&\n\"TAPROOT_HTLC_LOCAL_OFFERED_TIMEOUT\x10 \x12(\n$TAPROOT_HTLC_ACCEPTED_REMOTE_SUCCESS\x10!\x12\'\n#TAPROOT_HTLC_ACCEPTED_LOCAL_SUCCESS\x10\"\x12\x1d\n\x19TAPROOT_COMMITMENT_REVOKE\x10#*V\n\x11\x43hangeAddressType\x12#\n\x1f\x43HANGE_ADDRESS_TYPE_UNSPECIFIED\x10\x00\x12\x1c\n\x18\x43HANGE_ADDRESS_TYPE_P2TR\x10\x01\x32\xf6\x10\n\tWalletKit\x12L\n\x0bListUnspent\x12\x1d.walletrpc.ListUnspentRequest\x1a\x1e.walletrpc.ListUnspentResponse\x12L\n\x0bLeaseOutput\x12\x1d.walletrpc.LeaseOutputRequest\x1a\x1e.walletrpc.LeaseOutputResponse\x12R\n\rReleaseOutput\x12\x1f.walletrpc.ReleaseOutputRequest\x1a .walletrpc.ReleaseOutputResponse\x12I\n\nListLeases\x12\x1c.walletrpc.ListLeasesRequest\x1a\x1d.walletrpc.ListLeasesResponse\x12:\n\rDeriveNextKey\x12\x11.walletrpc.KeyReq\x1a\x16.signrpc.KeyDescriptor\x12\x38\n\tDeriveKey\x12\x13.signrpc.KeyLocator\x1a\x16.signrpc.KeyDescriptor\x12;\n\x08NextAddr\x12\x16.walletrpc.AddrRequest\x1a\x17.walletrpc.AddrResponse\x12\x46\n\x0eGetTransaction\x12 .walletrpc.GetTransactionRequest\x1a\x12.lnrpc.Transaction\x12O\n\x0cListAccounts\x12\x1e.walletrpc.ListAccountsRequest\x1a\x1f.walletrpc.ListAccountsResponse\x12X\n\x0fRequiredReserve\x12!.walletrpc.RequiredReserveRequest\x1a\".walletrpc.RequiredReserveResponse\x12R\n\rListAddresses\x12\x1f.walletrpc.ListAddressesRequest\x1a .walletrpc.ListAddressesResponse\x12\x64\n\x13SignMessageWithAddr\x12%.walletrpc.SignMessageWithAddrRequest\x1a&.walletrpc.SignMessageWithAddrResponse\x12j\n\x15VerifyMessageWithAddr\x12\'.walletrpc.VerifyMessageWithAddrRequest\x1a(.walletrpc.VerifyMessageWithAddrResponse\x12R\n\rImportAccount\x12\x1f.walletrpc.ImportAccountRequest\x1a .walletrpc.ImportAccountResponse\x12X\n\x0fImportPublicKey\x12!.walletrpc.ImportPublicKeyRequest\x1a\".walletrpc.ImportPublicKeyResponse\x12X\n\x0fImportTapscript\x12!.walletrpc.ImportTapscriptRequest\x1a\".walletrpc.ImportTapscriptResponse\x12H\n\x12PublishTransaction\x12\x16.walletrpc.Transaction\x1a\x1a.walletrpc.PublishResponse\x12[\n\x11RemoveTransaction\x12 .walletrpc.GetTransactionRequest\x1a$.walletrpc.RemoveTransactionResponse\x12L\n\x0bSendOutputs\x12\x1d.walletrpc.SendOutputsRequest\x1a\x1e.walletrpc.SendOutputsResponse\x12L\n\x0b\x45stimateFee\x12\x1d.walletrpc.EstimateFeeRequest\x1a\x1e.walletrpc.EstimateFeeResponse\x12R\n\rPendingSweeps\x12\x1f.walletrpc.PendingSweepsRequest\x1a .walletrpc.PendingSweepsResponse\x12@\n\x07\x42umpFee\x12\x19.walletrpc.BumpFeeRequest\x1a\x1a.walletrpc.BumpFeeResponse\x12I\n\nListSweeps\x12\x1c.walletrpc.ListSweepsRequest\x1a\x1d.walletrpc.ListSweepsResponse\x12[\n\x10LabelTransaction\x12\".walletrpc.LabelTransactionRequest\x1a#.walletrpc.LabelTransactionResponse\x12\x43\n\x08\x46undPsbt\x12\x1a.walletrpc.FundPsbtRequest\x1a\x1b.walletrpc.FundPsbtResponse\x12\x43\n\x08SignPsbt\x12\x1a.walletrpc.SignPsbtRequest\x1a\x1b.walletrpc.SignPsbtResponse\x12O\n\x0c\x46inalizePsbt\x12\x1e.walletrpc.FinalizePsbtRequest\x1a\x1f.walletrpc.FinalizePsbtResponseB1Z/github.com/lightningnetwork/lnd/lnrpc/walletrpcb\x06proto3')

_ADDRESSTYPE = DESCRIPTOR.enum_types_by_name['AddressType']
AddressType = enum_type_wrapper.EnumTypeWrapper(_ADDRESSTYPE)
_WITNESSTYPE = DESCRIPTOR.enum_types_by_name['WitnessType']
WitnessType = enum_type_wrapper.EnumTypeWrapper(_WITNESSTYPE)
_CHANGEADDRESSTYPE = DESCRIPTOR.enum_types_by_name['ChangeAddressType']
ChangeAddressType = enum_type_wrapper.EnumTypeWrapper(_CHANGEADDRESSTYPE)
UNKNOWN = 0
WITNESS_PUBKEY_HASH = 1
NESTED_WITNESS_PUBKEY_HASH = 2
HYBRID_NESTED_WITNESS_PUBKEY_HASH = 3
TAPROOT_PUBKEY = 4
UNKNOWN_WITNESS = 0
COMMITMENT_TIME_LOCK = 1
COMMITMENT_NO_DELAY = 2
COMMITMENT_REVOKE = 3
HTLC_OFFERED_REVOKE = 4
HTLC_ACCEPTED_REVOKE = 5
HTLC_OFFERED_TIMEOUT_SECOND_LEVEL = 6
HTLC_ACCEPTED_SUCCESS_SECOND_LEVEL = 7
HTLC_OFFERED_REMOTE_TIMEOUT = 8
HTLC_ACCEPTED_REMOTE_SUCCESS = 9
HTLC_SECOND_LEVEL_REVOKE = 10
WITNESS_KEY_HASH = 11
NESTED_WITNESS_KEY_HASH = 12
COMMITMENT_ANCHOR = 13
COMMITMENT_NO_DELAY_TWEAKLESS = 14
COMMITMENT_TO_REMOTE_CONFIRMED = 15
HTLC_OFFERED_TIMEOUT_SECOND_LEVEL_INPUT_CONFIRMED = 16
HTLC_ACCEPTED_SUCCESS_SECOND_LEVEL_INPUT_CONFIRMED = 17
LEASE_COMMITMENT_TIME_LOCK = 18
LEASE_COMMITMENT_TO_REMOTE_CONFIRMED = 19
LEASE_HTLC_OFFERED_TIMEOUT_SECOND_LEVEL = 20
LEASE_HTLC_ACCEPTED_SUCCESS_SECOND_LEVEL = 21
TAPROOT_PUB_KEY_SPEND = 22
TAPROOT_LOCAL_COMMIT_SPEND = 23
TAPROOT_REMOTE_COMMIT_SPEND = 24
TAPROOT_ANCHOR_SWEEP_SPEND = 25
TAPROOT_HTLC_OFFERED_TIMEOUT_SECOND_LEVEL = 26
TAPROOT_HTLC_ACCEPTED_SUCCESS_SECOND_LEVEL = 27
TAPROOT_HTLC_SECOND_LEVEL_REVOKE = 28
TAPROOT_HTLC_ACCEPTED_REVOKE = 29
TAPROOT_HTLC_OFFERED_REVOKE = 30
TAPROOT_HTLC_OFFERED_REMOTE_TIMEOUT = 31
TAPROOT_HTLC_LOCAL_OFFERED_TIMEOUT = 32
TAPROOT_HTLC_ACCEPTED_REMOTE_SUCCESS = 33
TAPROOT_HTLC_ACCEPTED_LOCAL_SUCCESS = 34
TAPROOT_COMMITMENT_REVOKE = 35
CHANGE_ADDRESS_TYPE_UNSPECIFIED = 0
CHANGE_ADDRESS_TYPE_P2TR = 1


_LISTUNSPENTREQUEST = DESCRIPTOR.message_types_by_name['ListUnspentRequest']
_LISTUNSPENTRESPONSE = DESCRIPTOR.message_types_by_name['ListUnspentResponse']
_LEASEOUTPUTREQUEST = DESCRIPTOR.message_types_by_name['LeaseOutputRequest']
_LEASEOUTPUTRESPONSE = DESCRIPTOR.message_types_by_name['LeaseOutputResponse']
_RELEASEOUTPUTREQUEST = DESCRIPTOR.message_types_by_name['ReleaseOutputRequest']
_RELEASEOUTPUTRESPONSE = DESCRIPTOR.message_types_by_name['ReleaseOutputResponse']
_KEYREQ = DESCRIPTOR.message_types_by_name['KeyReq']
_ADDRREQUEST = DESCRIPTOR.message_types_by_name['AddrRequest']
_ADDRRESPONSE = DESCRIPTOR.message_types_by_name['AddrResponse']
_ACCOUNT = DESCRIPTOR.message_types_by_name['Account']
_ADDRESSPROPERTY = DESCRIPTOR.message_types_by_name['AddressProperty']
_ACCOUNTWITHADDRESSES = DESCRIPTOR.message_types_by_name['AccountWithAddresses']
_LISTACCOUNTSREQUEST = DESCRIPTOR.message_types_by_name['ListAccountsRequest']
_LISTACCOUNTSRESPONSE = DESCRIPTOR.message_types_by_name['ListAccountsResponse']
_REQUIREDRESERVEREQUEST = DESCRIPTOR.message_types_by_name['RequiredReserveRequest']
_REQUIREDRESERVERESPONSE = DESCRIPTOR.message_types_by_name['RequiredReserveResponse']
_LISTADDRESSESREQUEST = DESCRIPTOR.message_types_by_name['ListAddressesRequest']
_LISTADDRESSESRESPONSE = DESCRIPTOR.message_types_by_name['ListAddressesResponse']
_GETTRANSACTIONREQUEST = DESCRIPTOR.message_types_by_name['GetTransactionRequest']
_SIGNMESSAGEWITHADDRREQUEST = DESCRIPTOR.message_types_by_name['SignMessageWithAddrRequest']
_SIGNMESSAGEWITHADDRRESPONSE = DESCRIPTOR.message_types_by_name['SignMessageWithAddrResponse']
_VERIFYMESSAGEWITHADDRREQUEST = DESCRIPTOR.message_types_by_name['VerifyMessageWithAddrRequest']
_VERIFYMESSAGEWITHADDRRESPONSE = DESCRIPTOR.message_types_by_name['VerifyMessageWithAddrResponse']
_IMPORTACCOUNTREQUEST = DESCRIPTOR.message_types_by_name['ImportAccountRequest']
_IMPORTACCOUNTRESPONSE = DESCRIPTOR.message_types_by_name['ImportAccountResponse']
_IMPORTPUBLICKEYREQUEST = DESCRIPTOR.message_types_by_name['ImportPublicKeyRequest']
_IMPORTPUBLICKEYRESPONSE = DESCRIPTOR.message_types_by_name['ImportPublicKeyResponse']
_IMPORTTAPSCRIPTREQUEST = DESCRIPTOR.message_types_by_name['ImportTapscriptRequest']
_TAPSCRIPTFULLTREE = DESCRIPTOR.message_types_by_name['TapscriptFullTree']
_TAPLEAF = DESCRIPTOR.message_types_by_name['TapLeaf']
_TAPSCRIPTPARTIALREVEAL = DESCRIPTOR.message_types_by_name['TapscriptPartialReveal']
_IMPORTTAPSCRIPTRESPONSE = DESCRIPTOR.message_types_by_name['ImportTapscriptResponse']
_TRANSACTION = DESCRIPTOR.message_types_by_name['Transaction']
_PUBLISHRESPONSE = DESCRIPTOR.message_types_by_name['PublishResponse']
_REMOVETRANSACTIONRESPONSE = DESCRIPTOR.message_types_by_name['RemoveTransactionResponse']
_SENDOUTPUTSREQUEST = DESCRIPTOR.message_types_by_name['SendOutputsRequest']
_SENDOUTPUTSRESPONSE = DESCRIPTOR.message_types_by_name['SendOutputsResponse']
_ESTIMATEFEEREQUEST = DESCRIPTOR.message_types_by_name['EstimateFeeRequest']
_ESTIMATEFEERESPONSE = DESCRIPTOR.message_types_by_name['EstimateFeeResponse']
_PENDINGSWEEP = DESCRIPTOR.message_types_by_name['PendingSweep']
_PENDINGSWEEPSREQUEST = DESCRIPTOR.message_types_by_name['PendingSweepsRequest']
_PENDINGSWEEPSRESPONSE = DESCRIPTOR.message_types_by_name['PendingSweepsResponse']
_BUMPFEEREQUEST = DESCRIPTOR.message_types_by_name['BumpFeeRequest']
_BUMPFEERESPONSE = DESCRIPTOR.message_types_by_name['BumpFeeResponse']
_LISTSWEEPSREQUEST = DESCRIPTOR.message_types_by_name['ListSweepsRequest']
_LISTSWEEPSRESPONSE = DESCRIPTOR.message_types_by_name['ListSweepsResponse']
_LISTSWEEPSRESPONSE_TRANSACTIONIDS = _LISTSWEEPSRESPONSE.nested_types_by_name['TransactionIDs']
_LABELTRANSACTIONREQUEST = DESCRIPTOR.message_types_by_name['LabelTransactionRequest']
_LABELTRANSACTIONRESPONSE = DESCRIPTOR.message_types_by_name['LabelTransactionResponse']
_FUNDPSBTREQUEST = DESCRIPTOR.message_types_by_name['FundPsbtRequest']
_FUNDPSBTRESPONSE = DESCRIPTOR.message_types_by_name['FundPsbtResponse']
_TXTEMPLATE = DESCRIPTOR.message_types_by_name['TxTemplate']
_TXTEMPLATE_OUTPUTSENTRY = _TXTEMPLATE.nested_types_by_name['OutputsEntry']
_PSBTCOINSELECT = DESCRIPTOR.message_types_by_name['PsbtCoinSelect']
_UTXOLEASE = DESCRIPTOR.message_types_by_name['UtxoLease']
_SIGNPSBTREQUEST = DESCRIPTOR.message_types_by_name['SignPsbtRequest']
_SIGNPSBTRESPONSE = DESCRIPTOR.message_types_by_name['SignPsbtResponse']
_FINALIZEPSBTREQUEST = DESCRIPTOR.message_types_by_name['FinalizePsbtRequest']
_FINALIZEPSBTRESPONSE = DESCRIPTOR.message_types_by_name['FinalizePsbtResponse']
_LISTLEASESREQUEST = DESCRIPTOR.message_types_by_name['ListLeasesRequest']
_LISTLEASESRESPONSE = DESCRIPTOR.message_types_by_name['ListLeasesResponse']
ListUnspentRequest = _reflection.GeneratedProtocolMessageType('ListUnspentRequest', (_message.Message,), {
  'DESCRIPTOR' : _LISTUNSPENTREQUEST,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.ListUnspentRequest)
  })
_sym_db.RegisterMessage(ListUnspentRequest)

ListUnspentResponse = _reflection.GeneratedProtocolMessageType('ListUnspentResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTUNSPENTRESPONSE,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.ListUnspentResponse)
  })
_sym_db.RegisterMessage(ListUnspentResponse)

LeaseOutputRequest = _reflection.GeneratedProtocolMessageType('LeaseOutputRequest', (_message.Message,), {
  'DESCRIPTOR' : _LEASEOUTPUTREQUEST,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.LeaseOutputRequest)
  })
_sym_db.RegisterMessage(LeaseOutputRequest)

LeaseOutputResponse = _reflection.GeneratedProtocolMessageType('LeaseOutputResponse', (_message.Message,), {
  'DESCRIPTOR' : _LEASEOUTPUTRESPONSE,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.LeaseOutputResponse)
  })
_sym_db.RegisterMessage(LeaseOutputResponse)

ReleaseOutputRequest = _reflection.GeneratedProtocolMessageType('ReleaseOutputRequest', (_message.Message,), {
  'DESCRIPTOR' : _RELEASEOUTPUTREQUEST,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.ReleaseOutputRequest)
  })
_sym_db.RegisterMessage(ReleaseOutputRequest)

ReleaseOutputResponse = _reflection.GeneratedProtocolMessageType('ReleaseOutputResponse', (_message.Message,), {
  'DESCRIPTOR' : _RELEASEOUTPUTRESPONSE,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.ReleaseOutputResponse)
  })
_sym_db.RegisterMessage(ReleaseOutputResponse)

KeyReq = _reflection.GeneratedProtocolMessageType('KeyReq', (_message.Message,), {
  'DESCRIPTOR' : _KEYREQ,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.KeyReq)
  })
_sym_db.RegisterMessage(KeyReq)

AddrRequest = _reflection.GeneratedProtocolMessageType('AddrRequest', (_message.Message,), {
  'DESCRIPTOR' : _ADDRREQUEST,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.AddrRequest)
  })
_sym_db.RegisterMessage(AddrRequest)

AddrResponse = _reflection.GeneratedProtocolMessageType('AddrResponse', (_message.Message,), {
  'DESCRIPTOR' : _ADDRRESPONSE,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.AddrResponse)
  })
_sym_db.RegisterMessage(AddrResponse)

Account = _reflection.GeneratedProtocolMessageType('Account', (_message.Message,), {
  'DESCRIPTOR' : _ACCOUNT,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.Account)
  })
_sym_db.RegisterMessage(Account)

AddressProperty = _reflection.GeneratedProtocolMessageType('AddressProperty', (_message.Message,), {
  'DESCRIPTOR' : _ADDRESSPROPERTY,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.AddressProperty)
  })
_sym_db.RegisterMessage(AddressProperty)

AccountWithAddresses = _reflection.GeneratedProtocolMessageType('AccountWithAddresses', (_message.Message,), {
  'DESCRIPTOR' : _ACCOUNTWITHADDRESSES,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.AccountWithAddresses)
  })
_sym_db.RegisterMessage(AccountWithAddresses)

ListAccountsRequest = _reflection.GeneratedProtocolMessageType('ListAccountsRequest', (_message.Message,), {
  'DESCRIPTOR' : _LISTACCOUNTSREQUEST,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.ListAccountsRequest)
  })
_sym_db.RegisterMessage(ListAccountsRequest)

ListAccountsResponse = _reflection.GeneratedProtocolMessageType('ListAccountsResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTACCOUNTSRESPONSE,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.ListAccountsResponse)
  })
_sym_db.RegisterMessage(ListAccountsResponse)

RequiredReserveRequest = _reflection.GeneratedProtocolMessageType('RequiredReserveRequest', (_message.Message,), {
  'DESCRIPTOR' : _REQUIREDRESERVEREQUEST,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.RequiredReserveRequest)
  })
_sym_db.RegisterMessage(RequiredReserveRequest)

RequiredReserveResponse = _reflection.GeneratedProtocolMessageType('RequiredReserveResponse', (_message.Message,), {
  'DESCRIPTOR' : _REQUIREDRESERVERESPONSE,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.RequiredReserveResponse)
  })
_sym_db.RegisterMessage(RequiredReserveResponse)

ListAddressesRequest = _reflection.GeneratedProtocolMessageType('ListAddressesRequest', (_message.Message,), {
  'DESCRIPTOR' : _LISTADDRESSESREQUEST,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.ListAddressesRequest)
  })
_sym_db.RegisterMessage(ListAddressesRequest)

ListAddressesResponse = _reflection.GeneratedProtocolMessageType('ListAddressesResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTADDRESSESRESPONSE,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.ListAddressesResponse)
  })
_sym_db.RegisterMessage(ListAddressesResponse)

GetTransactionRequest = _reflection.GeneratedProtocolMessageType('GetTransactionRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETTRANSACTIONREQUEST,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.GetTransactionRequest)
  })
_sym_db.RegisterMessage(GetTransactionRequest)

SignMessageWithAddrRequest = _reflection.GeneratedProtocolMessageType('SignMessageWithAddrRequest', (_message.Message,), {
  'DESCRIPTOR' : _SIGNMESSAGEWITHADDRREQUEST,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.SignMessageWithAddrRequest)
  })
_sym_db.RegisterMessage(SignMessageWithAddrRequest)

SignMessageWithAddrResponse = _reflection.GeneratedProtocolMessageType('SignMessageWithAddrResponse', (_message.Message,), {
  'DESCRIPTOR' : _SIGNMESSAGEWITHADDRRESPONSE,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.SignMessageWithAddrResponse)
  })
_sym_db.RegisterMessage(SignMessageWithAddrResponse)

VerifyMessageWithAddrRequest = _reflection.GeneratedProtocolMessageType('VerifyMessageWithAddrRequest', (_message.Message,), {
  'DESCRIPTOR' : _VERIFYMESSAGEWITHADDRREQUEST,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.VerifyMessageWithAddrRequest)
  })
_sym_db.RegisterMessage(VerifyMessageWithAddrRequest)

VerifyMessageWithAddrResponse = _reflection.GeneratedProtocolMessageType('VerifyMessageWithAddrResponse', (_message.Message,), {
  'DESCRIPTOR' : _VERIFYMESSAGEWITHADDRRESPONSE,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.VerifyMessageWithAddrResponse)
  })
_sym_db.RegisterMessage(VerifyMessageWithAddrResponse)

ImportAccountRequest = _reflection.GeneratedProtocolMessageType('ImportAccountRequest', (_message.Message,), {
  'DESCRIPTOR' : _IMPORTACCOUNTREQUEST,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.ImportAccountRequest)
  })
_sym_db.RegisterMessage(ImportAccountRequest)

ImportAccountResponse = _reflection.GeneratedProtocolMessageType('ImportAccountResponse', (_message.Message,), {
  'DESCRIPTOR' : _IMPORTACCOUNTRESPONSE,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.ImportAccountResponse)
  })
_sym_db.RegisterMessage(ImportAccountResponse)

ImportPublicKeyRequest = _reflection.GeneratedProtocolMessageType('ImportPublicKeyRequest', (_message.Message,), {
  'DESCRIPTOR' : _IMPORTPUBLICKEYREQUEST,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.ImportPublicKeyRequest)
  })
_sym_db.RegisterMessage(ImportPublicKeyRequest)

ImportPublicKeyResponse = _reflection.GeneratedProtocolMessageType('ImportPublicKeyResponse', (_message.Message,), {
  'DESCRIPTOR' : _IMPORTPUBLICKEYRESPONSE,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.ImportPublicKeyResponse)
  })
_sym_db.RegisterMessage(ImportPublicKeyResponse)

ImportTapscriptRequest = _reflection.GeneratedProtocolMessageType('ImportTapscriptRequest', (_message.Message,), {
  'DESCRIPTOR' : _IMPORTTAPSCRIPTREQUEST,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.ImportTapscriptRequest)
  })
_sym_db.RegisterMessage(ImportTapscriptRequest)

TapscriptFullTree = _reflection.GeneratedProtocolMessageType('TapscriptFullTree', (_message.Message,), {
  'DESCRIPTOR' : _TAPSCRIPTFULLTREE,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.TapscriptFullTree)
  })
_sym_db.RegisterMessage(TapscriptFullTree)

TapLeaf = _reflection.GeneratedProtocolMessageType('TapLeaf', (_message.Message,), {
  'DESCRIPTOR' : _TAPLEAF,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.TapLeaf)
  })
_sym_db.RegisterMessage(TapLeaf)

TapscriptPartialReveal = _reflection.GeneratedProtocolMessageType('TapscriptPartialReveal', (_message.Message,), {
  'DESCRIPTOR' : _TAPSCRIPTPARTIALREVEAL,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.TapscriptPartialReveal)
  })
_sym_db.RegisterMessage(TapscriptPartialReveal)

ImportTapscriptResponse = _reflection.GeneratedProtocolMessageType('ImportTapscriptResponse', (_message.Message,), {
  'DESCRIPTOR' : _IMPORTTAPSCRIPTRESPONSE,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.ImportTapscriptResponse)
  })
_sym_db.RegisterMessage(ImportTapscriptResponse)

Transaction = _reflection.GeneratedProtocolMessageType('Transaction', (_message.Message,), {
  'DESCRIPTOR' : _TRANSACTION,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.Transaction)
  })
_sym_db.RegisterMessage(Transaction)

PublishResponse = _reflection.GeneratedProtocolMessageType('PublishResponse', (_message.Message,), {
  'DESCRIPTOR' : _PUBLISHRESPONSE,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.PublishResponse)
  })
_sym_db.RegisterMessage(PublishResponse)

RemoveTransactionResponse = _reflection.GeneratedProtocolMessageType('RemoveTransactionResponse', (_message.Message,), {
  'DESCRIPTOR' : _REMOVETRANSACTIONRESPONSE,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.RemoveTransactionResponse)
  })
_sym_db.RegisterMessage(RemoveTransactionResponse)

SendOutputsRequest = _reflection.GeneratedProtocolMessageType('SendOutputsRequest', (_message.Message,), {
  'DESCRIPTOR' : _SENDOUTPUTSREQUEST,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.SendOutputsRequest)
  })
_sym_db.RegisterMessage(SendOutputsRequest)

SendOutputsResponse = _reflection.GeneratedProtocolMessageType('SendOutputsResponse', (_message.Message,), {
  'DESCRIPTOR' : _SENDOUTPUTSRESPONSE,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.SendOutputsResponse)
  })
_sym_db.RegisterMessage(SendOutputsResponse)

EstimateFeeRequest = _reflection.GeneratedProtocolMessageType('EstimateFeeRequest', (_message.Message,), {
  'DESCRIPTOR' : _ESTIMATEFEEREQUEST,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.EstimateFeeRequest)
  })
_sym_db.RegisterMessage(EstimateFeeRequest)

EstimateFeeResponse = _reflection.GeneratedProtocolMessageType('EstimateFeeResponse', (_message.Message,), {
  'DESCRIPTOR' : _ESTIMATEFEERESPONSE,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.EstimateFeeResponse)
  })
_sym_db.RegisterMessage(EstimateFeeResponse)

PendingSweep = _reflection.GeneratedProtocolMessageType('PendingSweep', (_message.Message,), {
  'DESCRIPTOR' : _PENDINGSWEEP,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.PendingSweep)
  })
_sym_db.RegisterMessage(PendingSweep)

PendingSweepsRequest = _reflection.GeneratedProtocolMessageType('PendingSweepsRequest', (_message.Message,), {
  'DESCRIPTOR' : _PENDINGSWEEPSREQUEST,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.PendingSweepsRequest)
  })
_sym_db.RegisterMessage(PendingSweepsRequest)

PendingSweepsResponse = _reflection.GeneratedProtocolMessageType('PendingSweepsResponse', (_message.Message,), {
  'DESCRIPTOR' : _PENDINGSWEEPSRESPONSE,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.PendingSweepsResponse)
  })
_sym_db.RegisterMessage(PendingSweepsResponse)

BumpFeeRequest = _reflection.GeneratedProtocolMessageType('BumpFeeRequest', (_message.Message,), {
  'DESCRIPTOR' : _BUMPFEEREQUEST,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.BumpFeeRequest)
  })
_sym_db.RegisterMessage(BumpFeeRequest)

BumpFeeResponse = _reflection.GeneratedProtocolMessageType('BumpFeeResponse', (_message.Message,), {
  'DESCRIPTOR' : _BUMPFEERESPONSE,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.BumpFeeResponse)
  })
_sym_db.RegisterMessage(BumpFeeResponse)

ListSweepsRequest = _reflection.GeneratedProtocolMessageType('ListSweepsRequest', (_message.Message,), {
  'DESCRIPTOR' : _LISTSWEEPSREQUEST,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.ListSweepsRequest)
  })
_sym_db.RegisterMessage(ListSweepsRequest)

ListSweepsResponse = _reflection.GeneratedProtocolMessageType('ListSweepsResponse', (_message.Message,), {

  'TransactionIDs' : _reflection.GeneratedProtocolMessageType('TransactionIDs', (_message.Message,), {
    'DESCRIPTOR' : _LISTSWEEPSRESPONSE_TRANSACTIONIDS,
    '__module__' : 'walletkit_pb2'
    # @@protoc_insertion_point(class_scope:walletrpc.ListSweepsResponse.TransactionIDs)
    })
  ,
  'DESCRIPTOR' : _LISTSWEEPSRESPONSE,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.ListSweepsResponse)
  })
_sym_db.RegisterMessage(ListSweepsResponse)
_sym_db.RegisterMessage(ListSweepsResponse.TransactionIDs)

LabelTransactionRequest = _reflection.GeneratedProtocolMessageType('LabelTransactionRequest', (_message.Message,), {
  'DESCRIPTOR' : _LABELTRANSACTIONREQUEST,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.LabelTransactionRequest)
  })
_sym_db.RegisterMessage(LabelTransactionRequest)

LabelTransactionResponse = _reflection.GeneratedProtocolMessageType('LabelTransactionResponse', (_message.Message,), {
  'DESCRIPTOR' : _LABELTRANSACTIONRESPONSE,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.LabelTransactionResponse)
  })
_sym_db.RegisterMessage(LabelTransactionResponse)

FundPsbtRequest = _reflection.GeneratedProtocolMessageType('FundPsbtRequest', (_message.Message,), {
  'DESCRIPTOR' : _FUNDPSBTREQUEST,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.FundPsbtRequest)
  })
_sym_db.RegisterMessage(FundPsbtRequest)

FundPsbtResponse = _reflection.GeneratedProtocolMessageType('FundPsbtResponse', (_message.Message,), {
  'DESCRIPTOR' : _FUNDPSBTRESPONSE,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.FundPsbtResponse)
  })
_sym_db.RegisterMessage(FundPsbtResponse)

TxTemplate = _reflection.GeneratedProtocolMessageType('TxTemplate', (_message.Message,), {

  'OutputsEntry' : _reflection.GeneratedProtocolMessageType('OutputsEntry', (_message.Message,), {
    'DESCRIPTOR' : _TXTEMPLATE_OUTPUTSENTRY,
    '__module__' : 'walletkit_pb2'
    # @@protoc_insertion_point(class_scope:walletrpc.TxTemplate.OutputsEntry)
    })
  ,
  'DESCRIPTOR' : _TXTEMPLATE,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.TxTemplate)
  })
_sym_db.RegisterMessage(TxTemplate)
_sym_db.RegisterMessage(TxTemplate.OutputsEntry)

PsbtCoinSelect = _reflection.GeneratedProtocolMessageType('PsbtCoinSelect', (_message.Message,), {
  'DESCRIPTOR' : _PSBTCOINSELECT,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.PsbtCoinSelect)
  })
_sym_db.RegisterMessage(PsbtCoinSelect)

UtxoLease = _reflection.GeneratedProtocolMessageType('UtxoLease', (_message.Message,), {
  'DESCRIPTOR' : _UTXOLEASE,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.UtxoLease)
  })
_sym_db.RegisterMessage(UtxoLease)

SignPsbtRequest = _reflection.GeneratedProtocolMessageType('SignPsbtRequest', (_message.Message,), {
  'DESCRIPTOR' : _SIGNPSBTREQUEST,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.SignPsbtRequest)
  })
_sym_db.RegisterMessage(SignPsbtRequest)

SignPsbtResponse = _reflection.GeneratedProtocolMessageType('SignPsbtResponse', (_message.Message,), {
  'DESCRIPTOR' : _SIGNPSBTRESPONSE,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.SignPsbtResponse)
  })
_sym_db.RegisterMessage(SignPsbtResponse)

FinalizePsbtRequest = _reflection.GeneratedProtocolMessageType('FinalizePsbtRequest', (_message.Message,), {
  'DESCRIPTOR' : _FINALIZEPSBTREQUEST,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.FinalizePsbtRequest)
  })
_sym_db.RegisterMessage(FinalizePsbtRequest)

FinalizePsbtResponse = _reflection.GeneratedProtocolMessageType('FinalizePsbtResponse', (_message.Message,), {
  'DESCRIPTOR' : _FINALIZEPSBTRESPONSE,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.FinalizePsbtResponse)
  })
_sym_db.RegisterMessage(FinalizePsbtResponse)

ListLeasesRequest = _reflection.GeneratedProtocolMessageType('ListLeasesRequest', (_message.Message,), {
  'DESCRIPTOR' : _LISTLEASESREQUEST,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.ListLeasesRequest)
  })
_sym_db.RegisterMessage(ListLeasesRequest)

ListLeasesResponse = _reflection.GeneratedProtocolMessageType('ListLeasesResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTLEASESRESPONSE,
  '__module__' : 'walletkit_pb2'
  # @@protoc_insertion_point(class_scope:walletrpc.ListLeasesResponse)
  })
_sym_db.RegisterMessage(ListLeasesResponse)

_WALLETKIT = DESCRIPTOR.services_by_name['WalletKit']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z/github.com/lightningnetwork/lnd/lnrpc/walletrpc'
  _PENDINGSWEEP.fields_by_name['sat_per_byte']._options = None
  _PENDINGSWEEP.fields_by_name['sat_per_byte']._serialized_options = b'\030\001'
  _PENDINGSWEEP.fields_by_name['next_broadcast_height']._options = None
  _PENDINGSWEEP.fields_by_name['next_broadcast_height']._serialized_options = b'\030\001'
  _PENDINGSWEEP.fields_by_name['force']._options = None
  _PENDINGSWEEP.fields_by_name['force']._serialized_options = b'\030\001'
  _PENDINGSWEEP.fields_by_name['requested_conf_target']._options = None
  _PENDINGSWEEP.fields_by_name['requested_conf_target']._serialized_options = b'\030\001'
  _PENDINGSWEEP.fields_by_name['requested_sat_per_byte']._options = None
  _PENDINGSWEEP.fields_by_name['requested_sat_per_byte']._serialized_options = b'\030\001'
  _BUMPFEEREQUEST.fields_by_name['sat_per_byte']._options = None
  _BUMPFEEREQUEST.fields_by_name['sat_per_byte']._serialized_options = b'\030\001'
  _BUMPFEEREQUEST.fields_by_name['force']._options = None
  _BUMPFEEREQUEST.fields_by_name['force']._serialized_options = b'\030\001'
  _TXTEMPLATE_OUTPUTSENTRY._options = None
  _TXTEMPLATE_OUTPUTSENTRY._serialized_options = b'8\001'
  _ADDRESSTYPE._serialized_start=5457
  _ADDRESSTYPE._serialized_end=5599
  _WITNESSTYPE._serialized_start=5602
  _WITNESSTYPE._serialized_end=6877
  _CHANGEADDRESSTYPE._serialized_start=6879
  _CHANGEADDRESSTYPE._serialized_end=6965
  _LISTUNSPENTREQUEST._serialized_start=61
  _LISTUNSPENTREQUEST._serialized_end=162
  _LISTUNSPENTRESPONSE._serialized_start=164
  _LISTUNSPENTRESPONSE._serialized_end=213
  _LEASEOUTPUTREQUEST._serialized_start=215
  _LEASEOUTPUTREQUEST._serialized_end=310
  _LEASEOUTPUTRESPONSE._serialized_start=312
  _LEASEOUTPUTRESPONSE._serialized_end=353
  _RELEASEOUTPUTREQUEST._serialized_start=355
  _RELEASEOUTPUTREQUEST._serialized_end=424
  _RELEASEOUTPUTRESPONSE._serialized_start=426
  _RELEASEOUTPUTRESPONSE._serialized_end=449
  _KEYREQ._serialized_start=451
  _KEYREQ._serialized_end=505
  _ADDRREQUEST._serialized_start=507
  _ADDRREQUEST._serialized_end=591
  _ADDRRESPONSE._serialized_start=593
  _ADDRRESPONSE._serialized_end=621
  _ACCOUNT._serialized_start=624
  _ACCOUNT._serialized_end=855
  _ADDRESSPROPERTY._serialized_start=857
  _ADDRESSPROPERTY._serialized_end=974
  _ACCOUNTWITHADDRESSES._serialized_start=977
  _ACCOUNTWITHADDRESSES._serialized_end=1131
  _LISTACCOUNTSREQUEST._serialized_start=1133
  _LISTACCOUNTSREQUEST._serialized_end=1214
  _LISTACCOUNTSRESPONSE._serialized_start=1216
  _LISTACCOUNTSRESPONSE._serialized_end=1276
  _REQUIREDRESERVEREQUEST._serialized_start=1278
  _REQUIREDRESERVEREQUEST._serialized_end=1338
  _REQUIREDRESERVERESPONSE._serialized_start=1340
  _REQUIREDRESERVERESPONSE._serialized_end=1391
  _LISTADDRESSESREQUEST._serialized_start=1393
  _LISTADDRESSESREQUEST._serialized_end=1467
  _LISTADDRESSESRESPONSE._serialized_start=1469
  _LISTADDRESSESRESPONSE._serialized_end=1557
  _GETTRANSACTIONREQUEST._serialized_start=1559
  _GETTRANSACTIONREQUEST._serialized_end=1596
  _SIGNMESSAGEWITHADDRREQUEST._serialized_start=1598
  _SIGNMESSAGEWITHADDRREQUEST._serialized_end=1653
  _SIGNMESSAGEWITHADDRRESPONSE._serialized_start=1655
  _SIGNMESSAGEWITHADDRRESPONSE._serialized_end=1703
  _VERIFYMESSAGEWITHADDRREQUEST._serialized_start=1705
  _VERIFYMESSAGEWITHADDRREQUEST._serialized_end=1781
  _VERIFYMESSAGEWITHADDRRESPONSE._serialized_start=1783
  _VERIFYMESSAGEWITHADDRRESPONSE._serialized_end=1845
  _IMPORTACCOUNTREQUEST._serialized_start=1848
  _IMPORTACCOUNTREQUEST._serialized_end=2008
  _IMPORTACCOUNTRESPONSE._serialized_start=2010
  _IMPORTACCOUNTRESPONSE._serialized_end=2134
  _IMPORTPUBLICKEYREQUEST._serialized_start=2136
  _IMPORTPUBLICKEYREQUEST._serialized_end=2226
  _IMPORTPUBLICKEYRESPONSE._serialized_start=2228
  _IMPORTPUBLICKEYRESPONSE._serialized_end=2253
  _IMPORTTAPSCRIPTREQUEST._serialized_start=2256
  _IMPORTTAPSCRIPTREQUEST._serialized_end=2482
  _TAPSCRIPTFULLTREE._serialized_start=2484
  _TAPSCRIPTFULLTREE._serialized_end=2543
  _TAPLEAF._serialized_start=2545
  _TAPLEAF._serialized_end=2592
  _TAPSCRIPTPARTIALREVEAL._serialized_start=2594
  _TAPSCRIPTPARTIALREVEAL._serialized_end=2691
  _IMPORTTAPSCRIPTRESPONSE._serialized_start=2693
  _IMPORTTAPSCRIPTRESPONSE._serialized_end=2740
  _TRANSACTION._serialized_start=2742
  _TRANSACTION._serialized_end=2786
  _PUBLISHRESPONSE._serialized_start=2788
  _PUBLISHRESPONSE._serialized_end=2828
  _REMOVETRANSACTIONRESPONSE._serialized_start=2830
  _REMOVETRANSACTIONRESPONSE._serialized_end=2873
  _SENDOUTPUTSREQUEST._serialized_start=2876
  _SENDOUTPUTSREQUEST._serialized_end=3073
  _SENDOUTPUTSRESPONSE._serialized_start=3075
  _SENDOUTPUTSRESPONSE._serialized_end=3112
  _ESTIMATEFEEREQUEST._serialized_start=3114
  _ESTIMATEFEEREQUEST._serialized_end=3155
  _ESTIMATEFEERESPONSE._serialized_start=3157
  _ESTIMATEFEERESPONSE._serialized_end=3198
  _PENDINGSWEEP._serialized_start=3201
  _PENDINGSWEEP._serialized_end=3611
  _PENDINGSWEEPSREQUEST._serialized_start=3613
  _PENDINGSWEEPSREQUEST._serialized_end=3635
  _PENDINGSWEEPSRESPONSE._serialized_start=3637
  _PENDINGSWEEPSRESPONSE._serialized_end=3709
  _BUMPFEEREQUEST._serialized_start=3712
  _BUMPFEEREQUEST._serialized_end=3887
  _BUMPFEERESPONSE._serialized_start=3889
  _BUMPFEERESPONSE._serialized_end=3922
  _LISTSWEEPSREQUEST._serialized_start=3924
  _LISTSWEEPSREQUEST._serialized_end=3982
  _LISTSWEEPSRESPONSE._serialized_start=3985
  _LISTSWEEPSRESPONSE._serialized_end=4189
  _LISTSWEEPSRESPONSE_TRANSACTIONIDS._serialized_start=4138
  _LISTSWEEPSRESPONSE_TRANSACTIONIDS._serialized_end=4179
  _LABELTRANSACTIONREQUEST._serialized_start=4191
  _LABELTRANSACTIONREQUEST._serialized_end=4264
  _LABELTRANSACTIONRESPONSE._serialized_start=4266
  _LABELTRANSACTIONRESPONSE._serialized_end=4292
  _FUNDPSBTREQUEST._serialized_start=4295
  _FUNDPSBTREQUEST._serialized_end=4661
  _FUNDPSBTRESPONSE._serialized_start=4663
  _FUNDPSBTRESPONSE._serialized_end=4775
  _TXTEMPLATE._serialized_start=4778
  _TXTEMPLATE._serialized_end=4924
  _TXTEMPLATE_OUTPUTSENTRY._serialized_start=4878
  _TXTEMPLATE_OUTPUTSENTRY._serialized_end=4924
  _PSBTCOINSELECT._serialized_start=4926
  _PSBTCOINSELECT._serialized_end=5021
  _UTXOLEASE._serialized_start=5023
  _UTXOLEASE._serialized_end=5135
  _SIGNPSBTREQUEST._serialized_start=5137
  _SIGNPSBTREQUEST._serialized_end=5175
  _SIGNPSBTRESPONSE._serialized_start=5177
  _SIGNPSBTRESPONSE._serialized_end=5239
  _FINALIZEPSBTREQUEST._serialized_start=5241
  _FINALIZEPSBTREQUEST._serialized_end=5300
  _FINALIZEPSBTRESPONSE._serialized_start=5302
  _FINALIZEPSBTRESPONSE._serialized_end=5367
  _LISTLEASESREQUEST._serialized_start=5369
  _LISTLEASESREQUEST._serialized_end=5388
  _LISTLEASESRESPONSE._serialized_start=5390
  _LISTLEASESRESPONSE._serialized_end=5454
  _WALLETKIT._serialized_start=6968
  _WALLETKIT._serialized_end=9134
# @@protoc_insertion_point(module_scope)
